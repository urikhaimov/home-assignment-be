version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: maggie-db-dev
    environment:
      POSTGRES_DB: maggie_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: maggie-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@maggie.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

  backend:
    build:
      context: .
      target: builder
    container_name: maggie-backend-dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: maggie_db
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run start:dev
    restart: unless-stopped

volumes:
  postgres_dev_data:
  pgadmin_dev_data: